# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-02-02 09:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [(b'user_management', '0001_initial_schemas'), (b'user_management', '0003_kamajiuser'), (b'user_management', '0004_auto_20161003_0737'), (b'user_management', '0005_unique_openstack_id'), (b'user_management', '0006_projectgroup_refactor'), (b'user_management', '0007_openstack_id_allow_blank'), (b'user_management', '0008_projectgroup_unique_together')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'Name of this group', max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'The name of this permission', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openstack_id', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'Name of this group', max_length=100, unique=True)),
                ('project', models.ForeignKey(help_text=b'The project this group is assigned to.', on_delete=django.db.models.deletion.CASCADE, related_name='project_groups', to='user_management.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'The name of this role.', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ViewPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_name', models.CharField(max_length=100)),
                ('create', models.BooleanField(default=False, help_text=b'True if create operations are allowed.')),
                ('read', models.BooleanField(default=False, help_text=b'True if read operations are allowed.')),
                ('update', models.BooleanField(default=False, help_text=b'True if update operations are allowed.')),
                ('delete', models.BooleanField(default=False, help_text=b'True if delete operations are allowed.')),
                ('permission', models.ForeignKey(help_text=b'The permission that this ViewPermission belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='view_permissions', to='user_management.Permission')),
            ],
        ),
        migrations.AddField(
            model_name='projectgroup',
            name='role',
            field=models.ForeignKey(help_text=b'The role that this group maps to', on_delete=django.db.models.deletion.CASCADE, related_name='projectgroups', to='user_management.Role'),
        ),
        migrations.AddField(
            model_name='projectgroup',
            name='users',
            field=models.ManyToManyField(blank=True, help_text=b'Users to be coupled with this group', related_name='projectgroups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='permission',
            name='roles',
            field=models.ManyToManyField(help_text=b'The roles that has this permission', related_name='permissions', to=b'user_management.Role'),
        ),
        migrations.AddField(
            model_name='globalgroup',
            name='role',
            field=models.ForeignKey(help_text=b'The role that this group maps to', on_delete=django.db.models.deletion.CASCADE, related_name='globalgroups', to='user_management.Role'),
        ),
        migrations.AddField(
            model_name='globalgroup',
            name='users',
            field=models.ManyToManyField(blank=True, help_text=b'Users to be coupled with this group', related_name='globalgroups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='KamajiUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssh_key', models.CharField(blank=True, max_length=2000, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='project',
            name='openstack_id',
            field=models.CharField(max_length=40),
        ),
        migrations.AlterField(
            model_name='project',
            name='openstack_id',
            field=models.CharField(max_length=40, unique=True),
        ),
        migrations.RemoveField(
            model_name='projectgroup',
            name='name',
        ),
        migrations.AlterField(
            model_name='project',
            name='openstack_id',
            field=models.CharField(blank=True, max_length=40, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='projectgroup',
            unique_together=set([('project', 'role')]),
        ),
    ]
